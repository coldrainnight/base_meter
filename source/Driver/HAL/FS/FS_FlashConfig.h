#ifndef FS_FLASH_CONFIG_H
#define FS_FLASH_CONFIG_H

#include  "App\record\RCRD.h"

#define FLASH_ADDR_BEGIN 0x00000000UL

/*记录快照文件*/
#if defined (THREE_PHASE)
    /* 掉上电 */
    #define PD_PON_EVT_ADDR FLASH_ADDR_BEGIN
    #define PD_PON_EVT_END (PD_PON_EVT_ADDR + PD_PON_EVT_SZ)
    /* 参数异常 */
    #define PARA_ERR_EVT_ADDR PD_PON_EVT_END
    #define PARA_ERR_EVT_END (PARA_ERR_EVT_ADDR + PARA_ERR_EVT_SZ)
    /* 电量异常 */
    #define ENG_ERR_EVT_ADDR PARA_ERR_EVT_END
    #define ENG_ERR_EVT_END (ENG_ERR_EVT_ADDR + ENG_ERR_EVT_SZ)
    
    /*A相失压*/
    #define LOST_VOLT_LA_ADDR ENG_ERR_EVT_END
    #define LOST_VOLT_LA_END (LOST_VOLT_LA_ADDR + LOST_VOLT_LA_SZ)

    /*B相失压*/
    #define LOST_VOLT_LB_ADDR LOST_VOLT_LA_END
    #define LOST_VOLT_LB_END (LOST_VOLT_LB_ADDR + LOST_VOLT_LB_SZ)

    /*C相失压*/
    #define LOST_VOLT_LC_ADDR LOST_VOLT_LB_END
    #define LOST_VOLT_LC_END (LOST_VOLT_LC_ADDR + LOST_VOLT_LC_SZ)

    /*A相欠压*/
    #define LACK_VOLT_LA_ADDR LOST_VOLT_LC_END
    #define LACK_VOLT_LA_END  (LACK_VOLT_LA_ADDR+LACK_VOLT_LA_SZ)

    /*B相欠压*/
    #define LACK_VOLT_LB_ADDR LACK_VOLT_LA_END
    #define LACK_VOLT_LB_END  (LACK_VOLT_LB_ADDR + LACK_VOLT_LB_SZ)

    /*C相欠压*/
    #define LACK_VOLT_LC_ADDR LACK_VOLT_LB_END
    #define LACK_VOLT_LC_END  (LACK_VOLT_LC_ADDR+LACK_VOLT_LC_SZ)

    /*A相过压*/
    #define OVER_VOLT_LA_ADDR  LACK_VOLT_LC_END
    #define OVER_VOLT_LA_END   (OVER_VOLT_LA_ADDR + OVER_VOLT_LA_SZ)

    /*B相过压*/
    #define OVER_VOLT_LB_ADDR  OVER_VOLT_LA_END
    #define OVER_VOLT_LB_END   (OVER_VOLT_LB_ADDR + OVER_VOLT_LB_SZ)

    /*C相过压*/
    #define OVER_VOLT_LC_ADDR  OVER_VOLT_LB_END
    #define OVER_VOLT_LC_END   (OVER_VOLT_LC_ADDR + OVER_VOLT_LC_SZ)

    /*A相断相*/
    #define BRK_PHASE_LA_ADDR OVER_VOLT_LC_END
    #define BRK_PHASE_LA_END  (BRK_PHASE_LA_ADDR + BRK_PHASE_LA_SZ)

    /*B相断相*/
    #define BRK_PHASE_LB_ADDR BRK_PHASE_LA_END
    #define BRK_PHASE_LB_END  (BRK_PHASE_LB_ADDR + BRK_PHASE_LB_SZ)

    /*C相断相*/
    #define BRK_PHASE_LC_ADDR BRK_PHASE_LB_END
    #define BRK_PHASE_LC_END  (BRK_PHASE_LC_ADDR + BRK_PHASE_LC_SZ)

    /*A相失流*/
    #define LOST_CURR_LA_ADDR BRK_PHASE_LC_END
    #define LOST_CURR_LA_END  (LOST_CURR_LA_ADDR + LOST_CURR_LA_SZ)

    /*B相失流*/
    #define LOST_CURR_LB_ADDR LOST_CURR_LA_END
    #define LOST_CURR_LB_END  (LOST_CURR_LB_ADDR + LOST_CURR_LB_SZ)

    /*C相失流*/
    #define LOST_CURR_LC_ADDR LOST_CURR_LB_END
    #define LOST_CURR_LC_END  (LOST_CURR_LC_ADDR + LOST_CURR_LC_SZ)
    
    /*A相过流*/
    #define OVER_CURR_LA_ADDR   LOST_CURR_LC_END
    #define OVER_CURR_LA_END (OVER_CURR_LA_ADDR + OVER_CURR_LA_SZ)

    /*B相过流*/
    #define OVER_CURR_LB_ADDR   OVER_CURR_LA_END
    #define OVER_CURR_LB_END (OVER_CURR_LB_ADDR + OVER_CURR_LB_SZ)

    /*C相过流*/
    #define OVER_CURR_LC_ADDR   OVER_CURR_LB_END
    #define OVER_CURR_LC_END (OVER_CURR_LC_ADDR + OVER_CURR_LC_SZ)

    /*A相断流*/
    #define BRK_CURR_LA_ADDR OVER_CURR_LC_END
    #define BRK_CURR_LA_END (BRK_CURR_LA_ADDR + BRK_CURR_LA_SZ)

    /*B相断流*/
    #define BRK_CURR_LB_ADDR BRK_CURR_LA_END
    #define BRK_CURR_LB_END (BRK_CURR_LB_ADDR + BRK_CURR_LB_SZ)

    /*C相断流*/
    #define BRK_CURR_LC_ADDR BRK_CURR_LB_END
    #define BRK_CURR_LC_END (BRK_CURR_LC_ADDR + BRK_CURR_LC_SZ)

    /*功率反向*/
    #define PWR_REVERSE_ADDR BRK_CURR_LC_END
    #define PWR_REVERSE_END (PWR_REVERSE_ADDR + PWR_REVERSE_SZ)

    /*A相功率反向*/
    #define PWR_REVERSE_LA_ADDR  PWR_REVERSE_END
    #define PWR_REVERSE_LA_END (PWR_REVERSE_LA_ADDR + PWR_REVERSE_LA_SZ)

    /*B相功率反向*/
    #define PWR_REVERSE_LB_ADDR  PWR_REVERSE_LA_END
    #define PWR_REVERSE_LB_END (PWR_REVERSE_LB_ADDR + PWR_REVERSE_LB_SZ)

    /*C相功率反向*/
    #define PWR_REVERSE_LC_ADDR  PWR_REVERSE_LB_END
    #define PWR_REVERSE_LC_END (PWR_REVERSE_LC_ADDR + PWR_REVERSE_LC_SZ)

    #define OVER_LOAD_LA_ADDR PWR_REVERSE_LC_END
    #define OVER_LOAD_LA_END  (OVER_LOAD_LA_ADDR + OVER_LOAD_LA_SZ)

    #define OVER_LOAD_LB_ADDR OVER_LOAD_LA_END
    #define OVER_LOAD_LB_END  (OVER_LOAD_LB_ADDR + OVER_LOAD_LB_SZ)

    #define OVER_LOAD_LC_ADDR OVER_LOAD_LB_END
    #define OVER_LOAD_LC_END  (OVER_LOAD_LC_ADDR + OVER_LOAD_LC_SZ)

    #define OVER_PA_DEMAND_ADDR  OVER_LOAD_LC_END
    #define OVER_PA_DEMAND_END (OVER_PA_DEMAND_ADDR + OVER_PA_DEMAND_SZ)

    #define OVER_NA_DEMAND_ADDR  OVER_PA_DEMAND_END
    #define OVER_NA_DEMAND_END (OVER_NA_DEMAND_ADDR + OVER_NA_DEMAND_SZ)

    #define OVER_R_DEMAND_I_ADDR OVER_NA_DEMAND_END
    #define OVER_R_DEMAND_I_END (OVER_R_DEMAND_I_ADDR + OVER_R_DEMAND_I_SZ)

    #define OVER_R_DEMAND_II_ADDR OVER_R_DEMAND_I_END
    #define OVER_R_DEMAND_II_END (OVER_R_DEMAND_II_ADDR + OVER_R_DEMAND_II_SZ)

    #define OVER_R_DEMAND_III_ADDR OVER_R_DEMAND_II_END
    #define OVER_R_DEMAND_III_END (OVER_R_DEMAND_III_ADDR + OVER_R_DEMAND_III_SZ)

    #define OVER_R_DEMAND_IV_ADDR OVER_R_DEMAND_III_END
    #define OVER_R_DEMAND_IV_END (OVER_R_DEMAND_IV_ADDR + OVER_R_DEMAND_IV_SZ)

    #define FACTOR_LOW_ADDR  OVER_R_DEMAND_IV_END
    #define FACTOR_LOW_END   (FACTOR_LOW_ADDR + FACTOR_LOW_SZ)
 
    #define ALL_LOST_VOLT_ADDR FACTOR_LOW_END
    #define ALL_LOST_VOLT_END (ALL_LOST_VOLT_ADDR + ALL_LOST_VOLT_SZ)

    #define AUX_PWR_DOWN_ADDR  ALL_LOST_VOLT_END
    #define AUX_PWR_DOWN_END  (AUX_PWR_DOWN_ADDR + AUX_PWR_DOWN_SZ)

    #define VOLT_INVERSE_ADDR AUX_PWR_DOWN_END
    #define VOLT_INVERSE_END  (VOLT_INVERSE_ADDR + VOLT_INVERSE_SZ)

    #define CURR_INVERSE_ADDR  VOLT_INVERSE_END
    #define CURR_INVERSE_END (CURR_INVERSE_ADDR + CURR_INVERSE_SZ)

    /*掉电*/
    #define PWR_DOWN_ADDR CURR_INVERSE_END
    #define PWR_DOWN_END (PWR_DOWN_ADDR + PWR_DOWN_SZ)

      /*电表清零*/
    #define MTR_CLR_ADDR PWR_DOWN_END
    #define MTR_CLR_END (MTR_CLR_ADDR + MTR_CLR_SZ)

    /*需量清零*/
    #define DEMAND_CLR_ADDR MTR_CLR_END
    #define DEMAND_CLR_END (DEMAND_CLR_ADDR + DEMAND_CLR_SZ)

    /*事件清零*/
    #define EVNT_CLR_ADDR DEMAND_CLR_END
    #define EVNT_CLR_END (EVNT_CLR_ADDR + EVNT_CLR_SZ)

    /*校时事件*/
    #define JUST_TIME_ADDR EVNT_CLR_END
    #define JUST_TIME_END (JUST_TIME_ADDR + JUST_TIME_SZ)

    /*开盖*/
    #define MTR_COVER_OPEN_ADDR     JUST_TIME_END
    #define MTR_COVER_OPEN_END      (MTR_COVER_OPEN_ADDR + MTR_COVER_OPEN_SZ)

    /*开端盖*/
    #define TAIL_COVER_OPEN_ADDR MTR_COVER_OPEN_END
    #define TAIL_COVER_OPEN_END  (TAIL_COVER_OPEN_ADDR + TAIL_COVER_OPEN_SZ)
    
    /*跳闸事件*/
    #define RELAY_TRIP_ADDR TAIL_COVER_OPEN_END
    #define RELAY_TRIP_END (RELAY_TRIP_ADDR + RELAY_TRIP_SZ)

    /*合闸事件*/
    #define RELAY_CLOSE_ADDR RELAY_TRIP_END
    #define RELAY_CLOSE_END (RELAY_CLOSE_ADDR +RELAY_CLOSE_SZ)

    /*日时段表编程*/
    #define DAY_TBL_PRG_ADDR RELAY_CLOSE_END
    #define DAY_TBL_PRG_END (DAY_TBL_PRG_ADDR + DAY_TBL_PRG_SZ)

    /*年时区表编程*/
    #define YEAR_TBL_PRG_ADDR DAY_TBL_PRG_END
    #define YEAR_TBL_PRG_END (YEAR_TBL_PRG_ADDR + YEAR_TBL_PRG_SZ)

    /*周休日编程事件*/
    #define WEEKEND_PRG_ADDR YEAR_TBL_PRG_END
    #define WEEKEND_PRG_END (WEEKEND_PRG_ADDR + WEEKEND_PRG_SZ)

    /*节假日编程*/
    #define HOLIDAY_PRG_ADDR WEEKEND_PRG_END
    #define HOLIDAY_PRG_END (HOLIDAY_PRG_ADDR + HOLIDAY_PRG_SZ)


    /*结算日编程事件*/
    #define BILL_DAY_PRG_ADDR HOLIDAY_PRG_END
    #define BILL_DAY_PRG_END  (BILL_DAY_PRG_ADDR + BILL_DAY_PRG_SZ)

    #define VOLT_IMBALANCE_ADDR  BILL_DAY_PRG_END
    #define VOLT_IMBALANCE_END (VOLT_IMBALANCE_ADDR + VOLT_IMBALANCE_SZ)

    #define CURR_IMBALANCE_ADDR  VOLT_IMBALANCE_END
    #define CURR_IMBALANCE_END (CURR_IMBALANCE_ADDR + CURR_IMBALANCE_SZ)
    
    /*有功组合模式字编程事件*/
    #define A_ENGY_COM_PRG_ADDR CURR_IMBALANCE_END
    #define A_ENGY_COM_PRG_END  (A_ENGY_COM_PRG_ADDR + A_ENGY_COM_PRG_SZ)

    #define R_ENGY_COM_PRG_ADDR  A_ENGY_COM_PRG_END
    #define R_ENGY_COM_PRG_END (R_ENGY_COM_PRG_ADDR + R_ENGY_COM_PRG_SZ)

    /*费率表编程事件*/
    #define TRIFF_PRG_ADDR  R_ENGY_COM_PRG_END
    #define TRIFF_PRG_END  (TRIFF_PRG_ADDR + TRIFF_PRG_SZ)

    /*阶梯表编程事件*/
    #define STEP_PRG_ADDR TRIFF_PRG_END
    #define STEP_PRG_END (STEP_PRG_ADDR + STEP_PRG_SZ)

    /*密钥更新事件*/
    #define KEY_UPDATE_ADDR STEP_PRG_END
    #define KEY_UPDATE_END (KEY_UPDATE_ADDR + KEY_UPDATE_SZ)
    
    /*插卡异常事件*/
    #define CARD_PLUG_IN_ERR_ADDR KEY_UPDATE_END
    #define CARD_PLUG_IN_ERR_END (CARD_PLUG_IN_ERR_ADDR + CARD_PLUG_IN_ERR_SZ)
    
    /*购电事件*/
    #define BUY_ENGY_ADDR CARD_PLUG_IN_ERR_END
    #define BUY_ENGY_END (BUY_ENGY_ADDR + BUY_ENGY_SZ)

    /*退费事件*/
    #define REFUND_ADDR  BUY_ENGY_END
    #define REFUND_END (REFUND_ADDR + REFUND_SZ )

    #define CONSTANT_MGNT_DISTURB_ADDR REFUND_END
    #define CONSTANT_MGNT_DISTURB_END (CONSTANT_MGNT_DISTURB_ADDR + CONSTANT_MGNT_DISTURB_SZ)

    /*继电器错误*/
    #define RELAY_ERR_ADDR CONSTANT_MGNT_DISTURB_END
    #define RELAY_ERR_END (RELAY_ERR_ADDR + RELAY_ERR_SZ)

    /*电源异常事件*/
    #define PWR_FAILURE_ADDR RELAY_ERR_END
    #define PWR_FAILURE_END (PWR_FAILURE_ADDR +PWR_FAILURE_SZ)

    #define CURR_IMBALANCE_BADLY_ADDR  PWR_FAILURE_END
    #define CURR_IMBALANCE_BADLY_END (CURR_IMBALANCE_BADLY_ADDR + CURR_IMBALANCE_BADLY_SZ)

    #define RTC_ERR_ADDR CURR_IMBALANCE_BADLY_END
    #define RTC_ERR_END (RTC_ERR_ADDR + RTC_ERR_SZ)
    
    #define MS_ERR_ADDR RTC_ERR_END
    #define MS_ERR_END (MS_ERR_ADDR + MS_ERR_SZ)                   
    
    /*瞬时冻结*/
    #define MMT_FRZ_ADDR MS_ERR_END
    #define MMT_FRZ_END (MMT_FRZ_ADDR+ MMT_FRZ_SZ)

    /*分钟冻结*/
    #define MIN_FRZ_ADDR MMT_FRZ_END
    #define MIN_FRZ_END (MIN_FRZ_ADDR + MIN_FRZ_SZ)

    /*小时冻结*/
    #define HOUR_FRZ_ADDR  MIN_FRZ_END
    #define HOUR_FRZ_END  (HOUR_FRZ_ADDR + HOUR_FRZ_SZ)
    
    /*日冻结*/
    #define DAY_FRZ_ADDR HOUR_FRZ_END
    #define DAY_FRZ_END (DAY_FRZ_ADDR + DAY_FRZ_SZ)

    /*月冻结*/
    #define MONTH_FRZ_ADDR DAY_FRZ_END
    #define MONTH_FRZ_END (MONTH_FRZ_ADDR + MONTH_FRZ_SZ)

    /*日时段表切换冻结*/
    #define DAY_TBL_SW_FRZ_ADDR MONTH_FRZ_END
    #define DAY_TBL_SW_FRZ_END  (DAY_TBL_SW_FRZ_ADDR + DAY_TBL_SW_FRZ_SZ)

    /*年时区表切换*/
    #define YEAR_TBL_SW_FRZ_ADDR DAY_TBL_SW_FRZ_END
    #define YEAR_TBL_SW_FRZ_END  (YEAR_TBL_SW_FRZ_ADDR +YEAR_TBL_SW_FRZ_SZ)

    /*费率电价切换*/
    #define TRIFF_SW_FRZ_ADDR YEAR_TBL_SW_FRZ_END
    #define TRIFF_SW_FRZ_END  (TRIFF_SW_FRZ_ADDR+ TRIFF_SW_FRZ_SZ)

    /*" 阶梯切换冻结 "*/
    #define STEP_SW_FRZ_ADDR TRIFF_SW_FRZ_END
    #define STEP_SW_FRZ_END (STEP_SW_FRZ_ADDR + STEP_SW_FRZ_SZ)

    /*" 阶梯结算冻结 "*/
    #define STEP_SW_BILL_ADDR STEP_SW_FRZ_END
    #define STEP_SW_BILL_END (STEP_SW_BILL_ADDR + STEP_BILL_FRZ_SZ)

    #define RCRD_FLASH_ADDR_END (STEP_SW_BILL_END)

#elif defined (SINGLE_PHASE)
    /*过流*/
#define OVER_CURR_LA_ADDR FLASH_ADDR_BEGIN
#define OVER_CURR_LA_END (OVER_CURR_LA_ADDR + OVER_CURR_LA_SZ)

    /*掉电*/
#define PWR_DOWN_ADDR OVER_CURR_LA_END
#define PWR_DOWN_END (PWR_DOWN_ADDR + PWR_DOWN_SZ)

    /*开盖*/
#define MTR_COVER_OPEN_ADDR     PWR_DOWN_END
#define MTR_COVER_OPEN_SIZE     MTR_COVER_OPEN_SZ
#define MTR_COVER_OPEN_END      (MTR_COVER_OPEN_ADDR + MTR_COVER_OPEN_SIZE)

    /*跳闸事件*/
#define RELAY_TRIP_ADDR MTR_COVER_OPEN_END
#define RELAY_TRIP_SIZE RELAY_TRIP_SZ
#define RELAY_TRIP_END (RELAY_TRIP_ADDR + RELAY_TRIP_SIZE)

    /*合闸事件*/
#define RELAY_CLOSE_ADDR RELAY_TRIP_END
#define RELAY_CLOSE_END (RELAY_CLOSE_ADDR +RELAY_CLOSE_SZ)

    /*编程事件*/
#define PRG_ADDR RELAY_CLOSE_END
#define PRG_END  (PRG_ADDR +PRG_SZ)

    /*电表清零*/
#define MTR_CLR_ADDR PRG_END
#define MTR_CLR_END (MTR_CLR_ADDR + MTR_CLR_SZ)

    /*事件清零*/
#define EVNT_CLR_ADDR MTR_CLR_END
#define EVNT_CLR_END (EVNT_CLR_ADDR + EVNT_CLR_SZ)

    /*校时事件*/
#define JUST_TIME_ADDR EVNT_CLR_END
#define JUST_TIME_END (JUST_TIME_ADDR + JUST_TIME_SZ)

    /*广播校时事件*/
#define BROADCAST_JUST_TIME_ADDR JUST_TIME_END
#define BROADCAST_JUST_TIME_END (BROADCAST_JUST_TIME_ADDR + BROADCAST_JUST_TIME_SZ)

    /*日时段表编程*/
#define DAY_TBL_PRG_ADDR BROADCAST_JUST_TIME_END
#define DAY_TBL_PRG_END (DAY_TBL_PRG_ADDR + DAY_TBL_PRG_SZ)

    /*年时区表编程*/
#define YEAR_TBL_PRG_ADDR DAY_TBL_PRG_END
#define YEAR_TBL_PRG_END (YEAR_TBL_PRG_ADDR + YEAR_TBL_PRG_SZ)

    /*周休日编程事件*/
#define WEEKEND_PRG_ADDR YEAR_TBL_PRG_END
#define WEEKEND_PRG_END (WEEKEND_PRG_ADDR + WEEKEND_PRG_SZ)

    /*节假日编程*/
#define HOLIDAY_PRG_ADDR WEEKEND_PRG_END
#define HOLIDAY_PRG_END (HOLIDAY_PRG_ADDR + HOLIDAY_PRG_SZ)

    /*晶振故障事件*/
#define OSCILLATOR_ERR_EVT_ADDR HOLIDAY_PRG_END
#define OSCILLATOR_ERR_EVT_END (OSCILLATOR_ERR_EVT_ADDR + OSCILLATOR_ERR_EVT_SZ)
    
    /*复位故障事件*/
#define SYS_RST_EVT_ADDR OSCILLATOR_ERR_EVT_END
#define SYS_RST_EVT_END (SYS_RST_EVT_ADDR + SYS_RST_EVNT_SZ)

    /*结算日编程事件*/
#define BILL_DAY_PRG_ADDR SYS_RST_EVT_END
#define BILL_DAY_PRG_END  (BILL_DAY_PRG_ADDR + BILL_DAY_PRG_SZ)

    /*有功组合模式字编程事件*/
#define A_ENGY_COM_PRG_ADDR BILL_DAY_PRG_END
#define A_ENGY_COM_PRG_END  (A_ENGY_COM_PRG_ADDR + A_ENGY_COM_PRG_SZ)

    /*费率表编程事件*/
#define TRIFF_PRG_ADDR  A_ENGY_COM_PRG_END
#define TRIFF_PRG_END  (TRIFF_PRG_ADDR + TRIFF_PRG_SZ)

    /*阶梯表编程事件*/
#define STEP_PRG_ADDR TRIFF_PRG_END
#define STEP_PRG_END (STEP_PRG_ADDR + STEP_PRG_SZ)

    /*密钥更新事件*/
#define KEY_UPDATE_ADDR STEP_PRG_END
#define KEY_UPDATE_END (KEY_UPDATE_ADDR + KEY_UPDATE_SZ)
    
    /*插卡异常事件*/
#define CARD_PLUG_IN_ERR_ADDR KEY_UPDATE_END
#define CARD_PLUG_IN_ERR_END (CARD_PLUG_IN_ERR_ADDR + CARD_PLUG_IN_ERR_SZ)
    
    /*购电事件*/
#define BUY_ENGY_ADDR CARD_PLUG_IN_ERR_END
#define BUY_ENGY_END (BUY_ENGY_ADDR + BUY_ENGY_SZ)

    /*退费事件*/
#define REFUND_ADDR  BUY_ENGY_END
#define REFUND_END (REFUND_ADDR + REFUND_SZ )

    /*继电器错误*/
#define RELAY_ERR_ADDR REFUND_END
#define RELAY_ERR_END (RELAY_ERR_ADDR + RELAY_ERR_SZ)

    /*电源异常事件*/
#define PWR_FAILURE_ADDR RELAY_ERR_END
#define PWR_FAILURE_END (PWR_FAILURE_ADDR +PWR_FAILURE_SZ)

#define RTC_ERR_ADDR PWR_FAILURE_END
#define RTC_ERR_END (RTC_ERR_ADDR + RTC_ERR_SZ)
    
#define MS_ERR_ADDR RTC_ERR_END
#define MS_ERR_END (MS_ERR_ADDR + MS_ERR_SZ) 

#define MGMT_COMM_ERR_ADDR MS_ERR_END
#define MGMT_COMM_ERR_END (MGMT_COMM_ERR_ADDR + MGMT_COMM_ERR_SZ) 

#define UPGRADE_ADDR MGMT_COMM_ERR_END
#define UPGRADE_END (UPGRADE_ADDR + UPGRADE_SZ) 

#define NOLEG_REPALCE_ADDR UPGRADE_END
#define NOLEG_REPALCE_END (NOLEG_REPALCE_ADDR + NOLEG_REPALCE_SZ) 
            
            /*瞬时冻结*/
#define MMT_FRZ_ADDR NOLEG_REPALCE_END//MS_ERR_END
#define MMT_FRZ_END (MMT_FRZ_ADDR+ MMT_FRZ_SZ)
            
            /*分钟冻结*/
#define MIN_FRZ_ADDR MMT_FRZ_END
#define MIN_FRZ_END (MIN_FRZ_ADDR + MIN_FRZ_SZ)

            /*小时冻结*/
#define HOUR_FRZ_ADDR MIN_FRZ_END
#define HOUR_FRZ_END (HOUR_FRZ_ADDR + HOUR_FRZ_SZ)
            
            /*日冻结*/
#define DAY_FRZ_ADDR HOUR_FRZ_END
#define DAY_FRZ_END (DAY_FRZ_ADDR + DAY_FRZ_SZ)
            
            /*月结算冻结*/
#define MONTH_BILL_ADDR DAY_FRZ_END
#define MONTH_BILL_END (MONTH_BILL_ADDR + MONTH_BILL_SZ)

            /*月冻结*/
#define MONTH_FRZ_ADDR MONTH_BILL_END
#define MONTH_FRZ_END (MONTH_FRZ_ADDR + MONTH_FRZ_SZ)

            /*日时段表切换冻结*/
#define DAY_TBL_SW_FRZ_ADDR MONTH_FRZ_END
#define DAY_TBL_SW_FRZ_END  (DAY_TBL_SW_FRZ_ADDR + DAY_TBL_SW_FRZ_SZ)

            /*年时区表切换*/
#define YEAR_TBL_SW_FRZ_ADDR DAY_TBL_SW_FRZ_END
#define YEAR_TBL_SW_FRZ_END  (YEAR_TBL_SW_FRZ_ADDR +YEAR_TBL_SW_FRZ_SZ)

            /*费率电价切换*/
#define TRIFF_SW_FRZ_ADDR YEAR_TBL_SW_FRZ_END
#define TRIFF_SW_FRZ_END  (TRIFF_SW_FRZ_ADDR+ TRIFF_SW_FRZ_SZ)

            /*" 阶梯切换冻结 "*/
#define STEP_SW_FRZ_ADDR TRIFF_SW_FRZ_END
#define STEP_SW_FRZ_END (STEP_SW_FRZ_ADDR + STEP_SW_FRZ_SZ)

            /*" 阶梯结算冻结 "*/
#define STEP_SW_BILL_ADDR STEP_SW_FRZ_END
#define STEP_SW_BILL_END (STEP_SW_BILL_ADDR + STEP_BILL_FRZ_SZ)

	/* 掉上电 */
    #define PD_PON_EVT_ADDR STEP_SW_BILL_END
    #define PD_PON_EVT_END (PD_PON_EVT_ADDR + PD_PON_EVT_SZ)
	
    #define MSR_DATAL_ADDR  PD_PON_EVT_END   /*"自监测数据A相"*/
    #define MSR_DATAL_SIZE  (5*FLASH_SECTOR_SZ)//sizeof(ST_MSRDATA_PHASEL)*_NUM_MSR_RCD
	#define MSR_DATAL_END   (MSR_DATAL_ADDR + MSR_DATAL_SIZE)
	
	#define MSR_DATAN_ADDR  (MSR_DATAL_END)	/*"(0x80000)  自监测数据L相"*/
	#define MSR_DATAN_SIZE  (5*FLASH_SECTOR_SZ)//sizeof(ST_MSRDATA_PHASEN)*_NUM_MSR_RCD
	#define MSR_DATAN_END   (MSR_DATAN_ADDR + MSR_DATAN_SIZE)
	
	#define MSR_DATA_OFFSET  (MSR_DATAN_ADDR)
	
    #define RCRD_FLASH_ADDR_END MSR_DATAN_END //FLASH_ADDR_BEGIN
#endif

    #define DATA_FLASH_ADDR_END RCRD_FLASH_ADDR_END
#endif
